% cc;
clear variables;
clc;

load ('mpg_scale.mat');
% rndprm = [236 136 32 55 246 357 61 135 214 295 392 309 391 35 266 27 261 197 359 21 29 192 152 1 187 190 194 37 221 183 163 83 366 173 63 126 19 308 116 285 65 289 118 42 179 36 200 165 4 219 257 370 324 241 2 145 175 50 256 218 386 123 122 368 143 287 114 81 323 388 96 45 280 133 286 346 224 141 142 25 10 169 339 352 294 374 250 202 129 102 262 79 240 276 11 75 164 349 258 249 348 174 232 119 17 171 253 367 7 46 31 274 225 8 269 380 9 217 358 162 153 361 64 78 243 16 98 158 112 351 39 94 344 273 252 77 268 283 80 41 154 137 320 371 222 124 381 144 90 206 84 355 149 58 34 13 220 376 311 248 267 57 132 254 272 95 3 223 314 204 350 97 6 104 331 277 337 338 178 377 328 5 279 180 71 239 151 356 282 107 313 332 345 382 365 378 87 298 383 109 52 251 312 155 43 88 291 69 103 310 264 115 54 208 372 148 363 305 290 216 189 117 12 170 327 293 147 296 139 390 195 150 301 318 242 362 319 196 342 186 62 99 229 260 230 74 303 199 389 156 369 22 60 67 30 59 159 329 89 198 302 334 70 231 299 193 53 18 177 281 233 205 247 297 26 300 234 106 278 325 227 181 51 167 237 209 306 207 113 347 330 213 226 191 379 73 375 340 335 20 284 275 201 111 245 185 100 23 44 134 307 40 326 184 228 322 212 263 265 168 91 316 336 211 203 188 270 121 385 82 160 33 131 360 210 172 354 14 72 48 304 341 321 85 292 76 68 235 38 128 108 244 47 315 271 157 161 93 215 288 86 317 49 120 343 24 101 125 66 259 138 182 140 255 146 92 56 333 130 364 373 238 384 15 387 105 166 127 176 28 110 353];
rndprm = [85 312 351 167 214 111 221 78 1 25 110 293 366 292 72 242 325 97 237 87 269 191 93 165 129 337 131 161 283 314 123 364 38 367 138 205 105 359 140 142 328 122 67 309 148 139 355 374 270 63 329 22 208 212 261 114 255 209 288 8 263 56 216 323 225 236 227 381 279 301 201 21 280 391 271 144 70 98 382 2 368 185 125 179 276 166 223 136 307 53 287 247 174 130 133 107 380 349 6 273 345 344 204 298 390 240 256 336 91 186 282 257 189 109 258 384 176 40 313 388 317 190 42 331 196 264 272 57 150 211 113 66 24 59 327 29 284 297 318 92 16 124 230 75 141 354 234 82 173 45 220 153 15 260 88 143 169 369 268 254 198 135 340 267 37 49 34 299 249 32 182 296 39 311 36 163 248 20 250 159 81 370 332 295 266 13 134 64 54 262 305 383 4 207 387 350 68 51 126 228 192 274 241 339 285 154 275 5 219 55 157 117 392 348 145 259 74 156 341 158 127 84 310 155 246 277 170 321 89 358 172 302 361 86 175 238 33 14 371 346 195 26 11 12 41 319 80 291 69 303 102 231 229 206 103 308 304 290 363 184 378 149 115 187 210 168 306 326 245 300 353 61 10 73 320 106 342 62 19 79 330 178 95 213 181 362 316 120 164 160 278 28 357 128 218 146 7 118 222 294 137 104 171 48 47 112 265 360 343 71 27 177 52 365 281 239 322 193 194 101 65 188 116 96 197 77 162 30 379 372 217 83 235 244 335 356 377 119 376 203 289 253 224 18 324 375 352 251 226 386 252 385 389 17 286 94 132 23 152 199 44 338 147 121 100 347 243 43 232 90 35 373 183 180 60 9 58 3 108 315 202 151 200 76 334 333 233 50 215 31 99 46];
% for i = 1:10
% rndprm = randperm(size(data,1));
data = full(data(rndprm, :));
dataClass = dataClass(rndprm, :);
% end
X = data(1:250, :);
Xval = data(251:321, :);
Xtest = data(322:392, :);
y = dataClass(1:250, :);
yval = dataClass(251:321, :);
ytest = dataClass(322:392, :);

m = size(X, 1);
n = size(X, 2);

%% Learning Curve for Linear Regression
% lambda = 0;
% [error_train, error_val] = ...
%     learningCurve([ones(m, 1) X], y, ...
%                   [ones(size(Xval, 1), 1) Xval], yval, ...
%                   lambda);
% 
% figure(); plot(1:m, error_train.*2, 1:m, error_val.*2);
% title('MSE(i)');
% legend('Accuracy Train', 'Accuracy CV');
% xlabel('i');
% ylabel('Accuracy (MSE)');

%% Validation for Selecting Lambda
[lambda_vec, error_train_l, error_val_l] = ...
    validationCurve([ones(m, 1) X], y, ...
                    [ones(size(Xval, 1), 1) Xval], yval);

figure(); plot(lambda_vec, error_train_l.*2, lambda_vec, error_val_l.*2);
title('MSE(\lambda)');
legend('Accuracy Train', 'Accuracy CV');
xlabel('C');
ylabel('Accuracy (MSE)');

%% Testing
[C, I] = min(error_val_l);
lambda = lambda_vec(I);
[theta] = trainLinearReg([ones(m, 1) X], y, lambda);
J = linearRegCostFunction([ones(size(Xtest, 1), 1) Xtest], ytest, theta, 1);
figure(); plot(1:size(Xtest, 1), (theta'*[ones(size(Xtest, 1), 1) Xtest]')', '-ob', 1:size(Xtest, 1), ytest, '-og');
title('Prediction vs. GroundTruth');
legend('Prediction', 'GroundTruth');

%% Normal equation
% theta = normalEqn([ones(m, 1) X], y);
% J = linearRegCostFunction([ones(size(Xtest, 1), 1) Xtest], ytest, theta, 1);
% figure(); plot(1:size(Xtest, 1), (theta'*[ones(size(Xtest, 1), 1) Xtest]')', '-ob', 1:size(Xtest, 1), ytest, '-og');
% legend('h(\theta)', 'ytest');
% xlabel('m');
